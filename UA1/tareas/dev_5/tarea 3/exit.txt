package tarea3pspvictoraljama;

import java.util.*;
import java.lang.*;

public class Tarea3PSPVictorAljamaExit {

    
    public static void main(String[] args) {
        
        //establecemos las condiciones requeridas en el enunciado, así, si el numero de argumentos introducidos es menor que 0,
        //definimos el System.exit en 1
        if(args.length<1){
            System.exit(1);
        }
        //si por el contrario recibimos al menos un argumento tendremos las siguientes posibilidades:
        else{
            //haciendo uso de la funcion comprobarNumero, que explicaremos más adelante, si el valor recibido no es un numero y
            //solo tenemos un argumento, el System.exit tendrá, como nos piden las instrucciones, el valor 2
            if(comprobarNumero(args[0]) == false && args.length==1){
                System.exit(2);
            }
            //recurriendo a la misma función que en el caso anterior, si el dato introducido como argumento es un numero y no recibimos
            //ningún argumento más pasamos al siguiente nivel:
            else{
                if(comprobarNumero(args[0]) && args.length==1){
                    int valorNumero = 0;
                    //le pasamos el valor int del argumento, para lo cual debemos hacer un casting de String a int
                    valorNumero = Integer.parseInt(args[0]);
                    //si el numero resultante es menor que 0, devolvemos un System.exit con el número 3
                    if(valorNumero<0){
                        System.exit(3);
                    }
                    //si se da el caso de que es un numero, pero es mayor que 0, al no cumplir ninguna de las especificaciones anteriores
                    //y siguiendo el enunciado, le asignaremos el valor 0 al System.exit
                    else{
                        System.exit(0);
                    }
                }
                //de igual forma,si no se cumple ninguna otra de las especificaciones requeridas, como por ejemplo, que recibamos más de 
                //un argumento, le asignaremos el valor 0 al System.exit
                else{
                    System.exit(0);
                }
            }  
        }
    }
    //esta función hace un casting momentaneo del argumento con formato String a int, esto con el fin de determinar si se puede o no
    //obtener un numero entero del argumento
    public static boolean comprobarNumero(String argumento){
        //si se puede hacer el casting, devolverá true
        try{
           Integer.parseInt(argumento);
           return true;
        }
        //usando catch para evitar el fallo en el programa, aprovecharemos para que, en caso de no poder obtener un int, (debido a que
        //el argumento no es un numero, sino un caracter o cadena de caracteres), devuelva false
        catch (NumberFormatException error){
           return false;
        }
    }
}