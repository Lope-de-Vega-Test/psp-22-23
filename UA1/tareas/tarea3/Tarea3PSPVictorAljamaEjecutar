package tarea3pspvictoraljama;

import java.io.File;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.*;
import java.util.Arrays;

public class Tarea3PSPVictorAljamaEjecutar {
    
    public static void main(String[] args) throws IOException{
        
        //declaramos un array auxiliar para copiar el argumento recibido (en el caso de que se introduzca uno)
        String[] argumentos=Arrays.copyOf(args, args.length);
        
        // En la variable ruta declaramos todo el path hasta la carpeta donde se encuentra el archivo que queremos ejecutar
        File ruta = new File("C:\\Users\\victo\\OneDrive\\Escritorio\\archivos DAM\\programacion servicios y procesos"
                + "\\Tarea3PSPVictorAljama\\src\\tarea3pspvictoraljama");
        
        //si args.length es 0, es decir, no se han introducido argumentos, declaramos el ProcessBuilder sin ningún argumento,
        //solamente el formato y el nombre
        if(args.length == 0){
            // Definimos el ProcessBuilder que se encarga de localizar el ejecutable a partir de la ruta especificada
            ProcessBuilder pb = new ProcessBuilder("java","Tarea3PSPVictorAljamaExit.java");
            //Aquí le pasamos la ruta en la que debe buscar el archivo .java que le hemos indicado antes
            pb.directory(ruta);

            try {
                // Redireccion de la entrada y salida del proceso lanzado a mi mismo
                pb.redirectInput(ProcessBuilder.Redirect.INHERIT);
                pb.redirectOutput(ProcessBuilder.Redirect.INHERIT);

                // El proceso indicado anteriormente se ejecuta			
                Process p = pb.start();
                // Esperamos a que finalice el programa/proceso lanzado.
                try {
                    p.waitFor();
                    //con esta linea queremos mostrar el valor del System.exit que obtenemos del otro programa
                    System.out.println("El valor devuelto del System.exit es: "+p.exitValue());
                }
                catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
            catch (IOException e1) {
                // TODO Auto-generated catch block
                e1.printStackTrace();
            }
        }
        //Si al pedir la longitud de args hay algún parámetro, repetiremos el mismo código, pero esta vez, en el ProcessBuilder
        //añadiremos el dato recogido en el array auxiliar
        else{
            // Definimos el ProcessBuilder que se encarga de localizar el ejecutable a partir de la ruta especificada
            ProcessBuilder pb = new ProcessBuilder("java","Tarea3PSPVictorAljamaExit.java",argumentos[0]);
            //Aquí le pasamos la ruta en la que debe buscar el archivo .java que le hemos indicado antes
            pb.directory(ruta);

            try {
                // Redireccion de la entrada y salida del proceso lanzado a mi mismo
                pb.redirectInput(ProcessBuilder.Redirect.INHERIT);
                pb.redirectOutput(ProcessBuilder.Redirect.INHERIT);

                // El proceso indicado anteriormente se ejecuta			
                Process p = pb.start();
                // Esperamos a que finalice el programa/proceso lanzado.
                try {
                    p.waitFor();
                    //con esta linea queremos mostrar el valor del System.exit que obtenemos del otro programa
                    System.out.println("El valor devuelto del System.exit es: "+p.exitValue());
                }
                catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
            catch (IOException e1) {
                // TODO Auto-generated catch block
                e1.printStackTrace();
            }
        }
    }
}
